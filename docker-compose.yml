version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=sqlite+aiosqlite:///./data/chatbot.db
      - CHROMA_PERSIST_DIR=./data/vectordb
      - UPLOAD_DIR=./data/uploads
      - PROCESSED_DIR=./data/processed
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GROQ_MODEL=mixtral-8x7b-32768
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - chatbot-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
    depends_on:
      - backend
    networks:
      - chatbot-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chatbot-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - chatbot-network

volumes:
  redis_data:

networks:
  chatbot-network:
    driver: bridge